/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import type { FileRoutesByPath, CreateFileRoute } from '@tanstack/react-router'
import { Route as rootRoute } from './routes/__root'
import { Route as WildcardPrefixsplatRouteImport } from './routes/wildcard/prefix${$}'
import { Route as WildcardSplatsuffixRouteImport } from './routes/wildcard/${$}suffix'
import { Route as WildcardSplatDotsuffixRouteImport } from './routes/wildcard/${$}[.]suffix'
import { Route as WildcardSplatRouteImport } from './routes/wildcard/$'

// Create/Update Routes

const WildcardPrefixsplatRoute = WildcardPrefixsplatRouteImport.update({
  id: '/wildcard/prefix${$}',
  path: '/wildcard/prefix${$}',
  getParentRoute: () => rootRoute,
} as any)

const WildcardSplatsuffixRoute = WildcardSplatsuffixRouteImport.update({
  id: '/wildcard/${$}suffix',
  path: '/wildcard/${$}suffix',
  getParentRoute: () => rootRoute,
} as any)

const WildcardSplatDotsuffixRoute = WildcardSplatDotsuffixRouteImport.update({
  id: '/wildcard/${$}.suffix',
  path: '/wildcard/${$}.suffix',
  getParentRoute: () => rootRoute,
} as any)

const WildcardSplatRoute = WildcardSplatRouteImport.update({
  id: '/wildcard/$',
  path: '/wildcard/$',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wildcard/$': {
      id: '/wildcard/$'
      path: '/wildcard/$'
      fullPath: '/wildcard/$'
      preLoaderRoute: typeof WildcardSplatRouteImport
      parentRoute: typeof rootRoute
    }
    '/wildcard/${$}.suffix': {
      id: '/wildcard/${$}.suffix'
      path: '/wildcard/${$}.suffix'
      fullPath: '/wildcard/${$}.suffix'
      preLoaderRoute: typeof WildcardSplatDotsuffixRouteImport
      parentRoute: typeof rootRoute
    }
    '/wildcard/${$}suffix': {
      id: '/wildcard/${$}suffix'
      path: '/wildcard/${$}suffix'
      fullPath: '/wildcard/${$}suffix'
      preLoaderRoute: typeof WildcardSplatsuffixRouteImport
      parentRoute: typeof rootRoute
    }
    '/wildcard/prefix${$}': {
      id: '/wildcard/prefix${$}'
      path: '/wildcard/prefix${$}'
      fullPath: '/wildcard/prefix${$}'
      preLoaderRoute: typeof WildcardPrefixsplatRouteImport
      parentRoute: typeof rootRoute
    }
  }
}

// Add type-safety to the createFileRoute function across the route tree

declare module './routes/wildcard/$' {
  const createFileRoute: CreateFileRoute<
    '/wildcard/$',
    FileRoutesByPath['/wildcard/$']['parentRoute'],
    FileRoutesByPath['/wildcard/$']['id'],
    FileRoutesByPath['/wildcard/$']['path'],
    FileRoutesByPath['/wildcard/$']['fullPath']
  >
}
declare module './routes/wildcard/${$}[.]suffix' {
  const createFileRoute: CreateFileRoute<
    '/wildcard/${$}.suffix',
    FileRoutesByPath['/wildcard/${$}.suffix']['parentRoute'],
    FileRoutesByPath['/wildcard/${$}.suffix']['id'],
    FileRoutesByPath['/wildcard/${$}.suffix']['path'],
    FileRoutesByPath['/wildcard/${$}.suffix']['fullPath']
  >
}
declare module './routes/wildcard/${$}suffix' {
  const createFileRoute: CreateFileRoute<
    '/wildcard/${$}suffix',
    FileRoutesByPath['/wildcard/${$}suffix']['parentRoute'],
    FileRoutesByPath['/wildcard/${$}suffix']['id'],
    FileRoutesByPath['/wildcard/${$}suffix']['path'],
    FileRoutesByPath['/wildcard/${$}suffix']['fullPath']
  >
}
declare module './routes/wildcard/prefix${$}' {
  const createFileRoute: CreateFileRoute<
    '/wildcard/prefix${$}',
    FileRoutesByPath['/wildcard/prefix${$}']['parentRoute'],
    FileRoutesByPath['/wildcard/prefix${$}']['id'],
    FileRoutesByPath['/wildcard/prefix${$}']['path'],
    FileRoutesByPath['/wildcard/prefix${$}']['fullPath']
  >
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/wildcard/$': typeof WildcardSplatRoute
  '/wildcard/${$}.suffix': typeof WildcardSplatDotsuffixRoute
  '/wildcard/${$}suffix': typeof WildcardSplatsuffixRoute
  '/wildcard/prefix${$}': typeof WildcardPrefixsplatRoute
}

export interface FileRoutesByTo {
  '/wildcard/$': typeof WildcardSplatRoute
  '/wildcard/${$}.suffix': typeof WildcardSplatDotsuffixRoute
  '/wildcard/${$}suffix': typeof WildcardSplatsuffixRoute
  '/wildcard/prefix${$}': typeof WildcardPrefixsplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/wildcard/$': typeof WildcardSplatRoute
  '/wildcard/${$}.suffix': typeof WildcardSplatDotsuffixRoute
  '/wildcard/${$}suffix': typeof WildcardSplatsuffixRoute
  '/wildcard/prefix${$}': typeof WildcardPrefixsplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/wildcard/$'
    | '/wildcard/${$}.suffix'
    | '/wildcard/${$}suffix'
    | '/wildcard/prefix${$}'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/wildcard/$'
    | '/wildcard/${$}.suffix'
    | '/wildcard/${$}suffix'
    | '/wildcard/prefix${$}'
  id:
    | '__root__'
    | '/wildcard/$'
    | '/wildcard/${$}.suffix'
    | '/wildcard/${$}suffix'
    | '/wildcard/prefix${$}'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  WildcardSplatRoute: typeof WildcardSplatRoute
  WildcardSplatDotsuffixRoute: typeof WildcardSplatDotsuffixRoute
  WildcardSplatsuffixRoute: typeof WildcardSplatsuffixRoute
  WildcardPrefixsplatRoute: typeof WildcardPrefixsplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  WildcardSplatRoute: WildcardSplatRoute,
  WildcardSplatDotsuffixRoute: WildcardSplatDotsuffixRoute,
  WildcardSplatsuffixRoute: WildcardSplatsuffixRoute,
  WildcardPrefixsplatRoute: WildcardPrefixsplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

// @ts-ignore
import type * as ServerTypes from '.tanstack-start/server-routes/routeTree.gen.ts'

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/wildcard/$",
        "/wildcard/${$}.suffix",
        "/wildcard/${$}suffix",
        "/wildcard/prefix${$}"
      ]
    },
    "/wildcard/$": {
      "filePath": "wildcard/$.tsx"
    },
    "/wildcard/${$}.suffix": {
      "filePath": "wildcard/${$}[.]suffix.tsx"
    },
    "/wildcard/${$}suffix": {
      "filePath": "wildcard/${$}suffix.tsx"
    },
    "/wildcard/prefix${$}": {
      "filePath": "wildcard/prefix${$}.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
